<===> options.yml
---
:end_version: '3.5'
:warning_todo:
- libsass

<===> input.scss
div {
    foo: 'A'#{B};
    foo: #{A}'B';
    foo: 'A'#{B}'C';
    foo: #{A}'B'#{C};
    foo: A#{B}'C';
    foo: 'A'#{B}C;
    foo: #{A}B'C';
    foo: 'A'#{B}C'D';
    foo: 'A'B#{C}D'E';
    foo: A'B'#{C}D'E';
    foo: #{A}'B'C'D''E';
}

div {
    foo: type-of('A'#{B});
    foo: type-of(#{A}'B');
    foo: type-of('A'#{B}'C');
    foo: type-of(#{A}'B'#{C});
    foo: type-of(A#{B}'C');
    foo: type-of('A'#{B}C);
    foo: type-of(#{A}B'C');
    foo: type-of('A'#{B}C'D');
    foo: type-of('A'B#{C}D'E');
    foo: type-of(A'B'#{C}D'E');
    foo: type-of(#{A}'B'C'D''E');
}

div {
    foo: length('A'#{B});
    foo: length(#{A}'B');
    foo: length('A'#{B}'C');
    foo: length(#{A}'B'#{C});
    foo: length(A#{B}'C');
    foo: length('A'#{B}C);
    foo: length(#{A}B'C');
    foo: length('A'#{B}C'D');
    foo: length('A'B#{C}D'E');
    foo: length(A'B'#{C}D'E');
    foo: length(#{A}'B'C'D''E');
}
<===> output.css
div {
  foo: "A"B;
  foo: A"B";
  foo: "A"B"C";
  foo: A"B"C;
  foo: AB"C";
  foo: "A"BC;
  foo: AB "C";
  foo: "A"BC "D";
  foo: "A" BCD "E";
  foo: A "B"CD "E";
  foo: A"B" C "D" "E";
}

div {
  foo: string;
  foo: string;
  foo: string;
  foo: string;
  foo: string;
  foo: string;
  foo: string;
  foo: string;
  foo: string;
  foo: string;
  foo: string;
}

div {
  foo: 1;
  foo: 1;
  foo: 1;
  foo: 1;
  foo: 1;
  foo: 1;
  foo: 1;
  foo: 1;
  foo: 1;
  foo: 1;
  foo: 1;
}

<===> warning
DEPRECATION WARNING on line 2 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('"A"B')

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 4 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('"A"B"C"')

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 7 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('"A"BC')

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 9 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('"A"B#{C "D"}')

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 11 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("#{A "B"}C#{D "E"}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 16 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('"A"B')

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 18 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('"A"B"C"')

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 21 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('"A"BC')

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 23 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('"A"B#{C "D"}')

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 25 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("#{A "B"}C#{D "E"}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 30 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('"A"B')

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 32 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('"A"B"C"')

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 35 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('"A"BC')

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 37 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('"A"B#{C "D"}')

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 39 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("#{A "B"}C#{D "E"}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 17 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('A"B"')

DEPRECATION WARNING on line 19 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('A"B"C')

DEPRECATION WARNING on line 20 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('AB"C"')

DEPRECATION WARNING on line 22 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("A#{B "C"}")

DEPRECATION WARNING on line 24 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("#{"A" B}C#{D "E"}")

DEPRECATION WARNING on line 26 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("A#{"B" C "D" "E"}")

DEPRECATION WARNING on line 31 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('A"B"')

DEPRECATION WARNING on line 33 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('A"B"C')

DEPRECATION WARNING on line 34 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('AB"C"')

DEPRECATION WARNING on line 36 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("A#{B "C"}")

DEPRECATION WARNING on line 38 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("#{"A" B}C#{D "E"}")

DEPRECATION WARNING on line 40 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("A#{"B" C "D" "E"}")
