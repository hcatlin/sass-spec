<===> options.yml
---
:end_version: '3.5'
:warning_todo:
- libsass

<===> input.scss
div {
  baz: 3/#{1/2};
  baz: 3/  #{1/  2};
  baz: 3  /#{1  /2};
  baz: 3 /  #{1  /  2};
}

add {
  baz: 3+#{1+2};
  baz: 3+  #{1+  2};
  baz: 3  +#{1  +2};
  baz: 3 +  #{1  +  2};
}

sub {
  baz: 3-#{1-2};
  baz: 3-  #{1-  2};
  baz: 3  -#{1  -2};
  baz: 3 -  #{1  -  2};
}

mul {
  baz: 3*#{1*2};
  baz: 3*  #{1*  2};
  baz: 3  *#{1  *2};
  baz: 3 *  #{1  *  2};
}

mod {
  baz: 3%#{1%2};
  baz: 3%  #{1%  2};
  baz: 3  %#{1  %2};
  baz: 3 %  #{1  %  2};
}
<===> output.css
div {
  baz: 3/1/2;
  baz: 3/ 1/2;
  baz: 3 /1/2;
  baz: 3 / 1/2;
}

add {
  baz: 3+3;
  baz: 3+ 3;
  baz: 3 +3;
  baz: 3 + 3;
}

sub {
  baz: 3--1;
  baz: 3- -1;
  baz: 3 -1 -2;
  baz: 3 - -1;
}

mul {
  baz: 3*2;
  baz: 3* 2;
  baz: 3 *2;
  baz: 3 * 2;
}

mod {
  baz: 3%1% 2;
  baz: 3% 1% 2;
  baz: 3 %1;
  baz: 3 % 1;
}

<===> warning
DEPRECATION WARNING on line 9 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("3+#{1 + 2}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 10 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("3+ #{1 + 2}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 11 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("3 +#{1 + 2}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 12 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("3 + #{1 + 2}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 17 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("3- #{1 - 2}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 19 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("3 - #{1 - 2}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 23 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("3*#{1 * 2}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 24 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("3* #{1 * 2}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 25 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("3 *#{1 * 2}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 26 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("3 * #{1 * 2}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 32 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("3 %#{1 % 2}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 33 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("3 % #{1 % 2}")

You can use the sass-convert command to automatically fix most cases.
