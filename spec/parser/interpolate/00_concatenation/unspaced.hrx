<===> options.yml
---
:end_version: '3.5'
:warning_todo:
- libsass

<===> input.scss
$input: literal;
.result {
  output: literal$input;
  output: literal#{$input};
  output: literal#{literal};
  output: literal#{"literal"};
  output: $input$input;
  output: $input#{$input};
  output: $input#{literal};
  output: $input#{"literal"};
  output: #{$input}literal;
  output: #{$input}$input;
  output: #{$input}#{$input};
  output: #{$input}#{literal};
  output: #{$input}#{"literal"};
  output: #{literal}literal;
  output: #{literal}$input;
  output: #{literal}#{$input};
  output: #{literal}#{literal};
  output: #{literal}#{"literal"};
  output: #{"literal"}literal;
  output: #{"literal"}$input;
  output: #{"literal"}#{$input};
  output: #{"literal"}#{literal};
  output: #{"literal"}#{"literal"};
  output: "literal#{$input}";
  output: "literal#{literal}";
  output: "literal#{"literal"}";
  output: "#{$input}literal";
  output: "#{$input}#{$input}";
  output: "#{$input}#{literal}";
  output: "#{$input}#{"literal"}";
  output: "#{literal}literal";
  output: "#{literal}#{$input}";
  output: "#{literal}#{literal}";
  output: "#{literal}#{"literal"}";
  output: "#{"literal"}literal";
  output: "#{"literal"}#{$input}";
  output: "#{"literal"}#{literal}";
  output: "#{"literal"}#{"literal"}";
}
<===> output.css
.result {
  output: literal literal;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literal literal;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: literalliteral;
  output: "literalliteral";
  output: "literalliteral";
  output: "literalliteral";
  output: "literalliteral";
  output: "literalliteral";
  output: "literalliteral";
  output: "literalliteral";
  output: "literalliteral";
  output: "literalliteral";
  output: "literalliteral";
  output: "literalliteral";
  output: "literalliteral";
  output: "literalliteral";
  output: "literalliteral";
  output: "literalliteral";
}

<===> warning
DEPRECATION WARNING on line 8 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("#{$input}#{$input}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 9 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("#{$input}literal")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 10 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('#{$input}"literal"')

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 12 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("#{$input}#{$input}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 17 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote("literal#{$input}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 22 of input.scss:
#{} interpolation near operators will be simplified in a future version of Sass.
To preserve the current behavior, use quotes:

  unquote('"literal"#{$input}')

You can use the sass-convert command to automatically fix most cases.
