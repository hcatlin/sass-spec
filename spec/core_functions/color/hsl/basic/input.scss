// These test cases come from two official W3C test suites:
//
// * https://www.w3.org/Style/CSS/Test/CSS3/Color/20070927/html4/t040204-hsl-h-rotating-b.htm
// * https://www.w3.org/Style/CSS/Test/CSS3/Color/current/html4/t040204-hsl-values-b.htm

hue {
  @mixin test-hues($name, $hues...) {
    #{$name} {
      @each $hue in $hues {
        hue-#{$hue}: hsl($hue, 100%, 50%);
      }
    }
  }

  @include test-hues("red", 0, -360, 260, 6120);
  @include test-hues("yellow", 60, -300, 420, -9660);
  @include test-hues("green", 120, -240, 480, 99840);
  @include test-hues("cyan", 180, -180, 540, -900);
  @include test-hues("blue", 240, -120, 600, -104880);
  @include test-hues("purple", 300, -60, 660, 2820);
}

red-to-green {
  step-1: hsl(0, 100%, 50%);
  step-2: hsl(12, 100%, 50%);
  step-3: hsl(24, 100%, 50%);
  step-4: hsl(36, 100%, 50%);
  step-5: hsl(48, 100%, 50%);
  step-6: hsl(60, 100%, 50%);
  step-7: hsl(72, 100%, 50%);
  step-8: hsl(84, 100%, 50%);
  step-9: hsl(96, 100%, 50%);
  step-10: hsl(108, 100%, 50%);
  step-11: hsl(120, 100%, 50%);
}

green-to-blue {
  step-1: hsl(120, 100%, 50%);
  step-2: hsl(132, 100%, 50%);
  step-3: hsl(144, 100%, 50%);
  step-4: hsl(156, 100%, 50%);
  step-5: hsl(168, 100%, 50%);
  step-6: hsl(180, 100%, 50%);
  step-7: hsl(192, 100%, 50%);
  step-8: hsl(204, 100%, 50%);
  step-9: hsl(216, 100%, 50%);
  step-10: hsl(228, 100%, 50%);
  step-11: hsl(240, 100%, 50%);
}

blue-to-red {
  step-1: hsl(240, 100%, 50%);
  step-2: hsl(252, 100%, 50%);
  step-3: hsl(264, 100%, 50%);
  step-4: hsl(276, 100%, 50%);
  step-5: hsl(288, 100%, 50%);
  step-6: hsl(300, 100%, 50%);
  step-7: hsl(312, 100%, 50%);
  step-8: hsl(324, 100%, 50%);
  step-9: hsl(336, 100%, 50%);
  step-10: hsl(348, 100%, 50%);
  step-11: hsl(360, 100%, 50%);
}

gray-to {
  red {
    step-1: hsl(0, 20%, 50%);
    step-2: hsl(0, 60%, 50%);
    step-3: hsl(0, 100%, 50%);
  }

  yellow {
    step-1: hsl(60, 20%, 50%);
    step-2: hsl(60, 60%, 50%);
    step-3: hsl(60, 100%, 50%);
  }

  green {
    step-1: hsl(120, 20%, 50%);
    step-2: hsl(120, 60%, 50%);
    step-3: hsl(120, 100%, 50%);
  }

  cyan {
    step-1: hsl(180, 20%, 50%);
    step-2: hsl(180, 60%, 50%);
    step-3: hsl(180, 100%, 50%);
  }

  blue {
    step-1: hsl(240, 20%, 50%);
    step-2: hsl(240, 60%, 50%);
    step-3: hsl(240, 100%, 50%);
  }

  purple {
    step-1: hsl(300, 20%, 50%);
    step-2: hsl(300, 60%, 50%);
    step-3: hsl(300, 100%, 50%);
  }
}

black-to-white-through {
  red {
    step-1: hsl(0, 100%, 0%);
    step-2: hsl(0, 100%, 10%);
    step-3: hsl(0, 100%, 20%);
    step-4: hsl(0, 100%, 30%);
    step-5: hsl(0, 100%, 40%);
    step-6: hsl(0, 100%, 50%);
    step-7: hsl(0, 100%, 60%);
    step-8: hsl(0, 100%, 70%);
    step-9: hsl(0, 100%, 80%);
    step-10: hsl(0, 100%, 90%);
    step-11: hsl(0, 100%, 100%);
  }

  yellow {
    step-1: hsl(60, 100%, 0%);
    step-2: hsl(60, 100%, 10%);
    step-3: hsl(60, 100%, 20%);
    step-4: hsl(60, 100%, 30%);
    step-5: hsl(60, 100%, 40%);
    step-6: hsl(60, 100%, 50%);
    step-7: hsl(60, 100%, 60%);
    step-8: hsl(60, 100%, 70%);
    step-9: hsl(60, 100%, 80%);
    step-10: hsl(60, 100%, 90%);
    step-11: hsl(60, 100%, 100%);
  }

  green {
    step-1: hsl(120, 100%, 0%);
    step-2: hsl(120, 100%, 10%);
    step-3: hsl(120, 100%, 20%);
    step-4: hsl(120, 100%, 30%);
    step-5: hsl(120, 100%, 40%);
    step-6: hsl(120, 100%, 50%);
    step-7: hsl(120, 100%, 60%);
    step-8: hsl(120, 100%, 70%);
    step-9: hsl(120, 100%, 80%);
    step-10: hsl(120, 100%, 90%);
    step-11: hsl(120, 100%, 100%);
  }

  cyan {
    step-1: hsl(180, 100%, 0%);
    step-2: hsl(180, 100%, 10%);
    step-3: hsl(180, 100%, 20%);
    step-4: hsl(180, 100%, 30%);
    step-5: hsl(180, 100%, 40%);
    step-6: hsl(180, 100%, 50%);
    step-7: hsl(180, 100%, 60%);
    step-8: hsl(180, 100%, 70%);
    step-9: hsl(180, 100%, 80%);
    step-10: hsl(180, 100%, 90%);
    step-11: hsl(180, 100%, 100%);
  }

  blue {
    step-1: hsl(240, 100%, 0%);
    step-2: hsl(240, 100%, 10%);
    step-3: hsl(240, 100%, 20%);
    step-4: hsl(240, 100%, 30%);
    step-5: hsl(240, 100%, 40%);
    step-6: hsl(240, 100%, 50%);
    step-7: hsl(240, 100%, 60%);
    step-8: hsl(240, 100%, 70%);
    step-9: hsl(240, 100%, 80%);
    step-10: hsl(240, 100%, 90%);
    step-11: hsl(240, 100%, 100%);
  }

  purple {
    step-1: hsl(300, 100%, 0%);
    step-2: hsl(300, 100%, 10%);
    step-3: hsl(300, 100%, 20%);
    step-4: hsl(300, 100%, 30%);
    step-5: hsl(300, 100%, 40%);
    step-6: hsl(300, 100%, 50%);
    step-7: hsl(300, 100%, 60%);
    step-8: hsl(300, 100%, 70%);
    step-9: hsl(300, 100%, 80%);
    step-10: hsl(300, 100%, 90%);
    step-11: hsl(300, 100%, 100%);
  }
}

// The W3C tests cover clamped hue, but not clamped saturation or lightness.
clamped {
  saturation-above: hsl(0, 500%, 50%);
  saturation-below: hsl(0, -100%, 50%);
  lightness-above: hsl(0, 100%, 500%);
  lightness-below: hsl(0, 100%, -100%);
}

units {
  hue-deg: hsl(0deg, 100%, 50%);
  saturation-unitless: hsl(0, 50, 50%);
  lightness-unitless: hsl(0, 100%, 50);
}

named {
  x: hsl($hue: 0, $saturation: 100%, $lightness: 50%);
}
