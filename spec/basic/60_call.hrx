<===> input.scss
@function foobar() {
  @return foobar;
}

@function fudge($str) {
  @return "assets/fudge/" + $str;
}


body {
  display: call(foobar); 
  display: call(min, 1,3,5,7);
  display: call(min, 5);
  display: call(max, 10,3,5,7);
  color: fudge("blah");
}
<===> output.css
body {
  display: foobar;
  display: 1;
  display: 5;
  display: 10;
  color: "assets/fudge/blah";
}

<===> warning
DEPRECATION WARNING: Passing a string to call() is deprecated and will be illegal
in Sass 4.0. Use call(function-reference(foobar)) instead.

DEPRECATION WARNING: Passing a string to call() is deprecated and will be illegal
in Sass 4.0. Use call(function-reference(min)) instead.

DEPRECATION WARNING: Passing a string to call() is deprecated and will be illegal
in Sass 4.0. Use call(function-reference(min)) instead.

DEPRECATION WARNING: Passing a string to call() is deprecated and will be illegal
in Sass 4.0. Use call(function-reference(max)) instead.

<===> warning-dart-sass
DEPRECATION WARNING: Passing a string to call() is deprecated and will be illegal
in Dart Sass 2.0.0. Use call(get-function(foobar)) instead.

   ,
11 |   display: call(foobar); 
   |            ^^^^^^^^^^^^
   '
    input.scss 11:12  root stylesheet

DEPRECATION WARNING: Passing a string to call() is deprecated and will be illegal
in Dart Sass 2.0.0. Use call(get-function(min)) instead.

   ,
12 |   display: call(min, 1,3,5,7);
   |            ^^^^^^^^^^^^^^^^^^
   '
    input.scss 12:12  root stylesheet

DEPRECATION WARNING: Passing a string to call() is deprecated and will be illegal
in Dart Sass 2.0.0. Use call(get-function(min)) instead.

   ,
13 |   display: call(min, 5);
   |            ^^^^^^^^^^^^
   '
    input.scss 13:12  root stylesheet

DEPRECATION WARNING: Passing a string to call() is deprecated and will be illegal
in Dart Sass 2.0.0. Use call(get-function(max)) instead.

   ,
14 |   display: call(max, 10,3,5,7);
   |            ^^^^^^^^^^^^^^^^^^^
   '
    input.scss 14:12  root stylesheet
