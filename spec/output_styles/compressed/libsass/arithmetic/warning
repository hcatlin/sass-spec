DEPRECATION WARNING on line 12 of input.scss: #{} interpolation near operators will be simplified
in a future version of Sass. To preserve the current behavior, use quotes:

  unquote("#{3 + un}quo#{te("hello")}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 25 of input.scss: #{} interpolation near operators will be simplified
in a future version of Sass. To preserve the current behavior, use quotes:

  unquote("#{3 - un}quo#{te("hello")}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 55 of input.scss: #{} interpolation near operators will be simplified
in a future version of Sass. To preserve the current behavior, use quotes:

  unquote("#{3 / un}quo#{te("hello")}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 80 of input.scss: #{} interpolation near operators will be simplified
in a future version of Sass. To preserve the current behavior, use quotes:

  unquote("#{50% + un}quo#{te("hello")}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 91 of input.scss: #{} interpolation near operators will be simplified
in a future version of Sass. To preserve the current behavior, use quotes:

  unquote("#{50% - un}quo#{te("hello")}")

You can use the sass-convert command to automatically fix most cases.

DEPRECATION WARNING on line 113 of input.scss: #{} interpolation near operators will be simplified
in a future version of Sass. To preserve the current behavior, use quotes:

  unquote("#{50% / un}quo#{te("hello")}")

You can use the sass-convert command to automatically fix most cases.
