<===> empty/both/input.scss
a {b: inspect(map-merge((), ()))}

<===> empty/both/output.css
a {
  b: ();
}

<===>
================================================================================
<===> empty/first/input.scss
a {b: inspect(map-merge((), (c: d, e: f)))}

<===> empty/first/output.css
a {
  b: (c: d, e: f);
}

<===>
================================================================================
<===> empty/second/input.scss
a {b: inspect(map-merge((c: d, e: f), ()))}

<===> empty/second/output.css
a {
  b: (c: d, e: f);
}

<===>
================================================================================
<===> different_keys/input.scss
a {b: inspect(map-merge((c: d, e: f), (1: 2, 3: 4)))}

<===> different_keys/output.css
a {
  b: (c: d, e: f, 1: 2, 3: 4);
}

<===>
================================================================================
<===> same_keys/input.scss
a {b: inspect(map-merge((c: d, e: f), (c: 1, e: 2)))}

<===> same_keys/output.css
a {
  b: (c: 1, e: 2);
}

<===>
================================================================================
<===> overlapping_keys/input.scss
a {b: inspect(map-merge((c: d, e: f, g: h), (i: 1, e: 2, j: 3)))}

<===> overlapping_keys/output.css
a {
  b: (c: d, e: 2, g: h, i: 1, j: 3);
}

<===>
================================================================================
<===> named/input.scss
a {b: inspect(map-merge($map1: (c: d), $map2: (1: 2)))}

<===> named/output.css
a {
  b: (c: d, 1: 2);
}

<===>
================================================================================
<===> error/type/map1/input.scss
a {b: map-merge(1, (c: d))}

<===> error/type/map1/error
Error: $map1: 1 is not a map.
  ,
1 | a {b: map-merge(1, (c: d))}
  |       ^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===> error/type/map1/error-libsass
Error: argument `$map1` of `map-merge($map1, $map2)` must be a map
        on line 1:7 of input.scss, in function `map-merge`
        from line 1:7 of input.scss
>> a {b: map-merge(1, (c: d))}

   ------^

<===>
================================================================================
<===> error/type/map2/input.scss
a {b: map-merge((c: d), 1)}

<===> error/type/map2/error
Error: $map2: 1 is not a map.
  ,
1 | a {b: map-merge((c: d), 1)}
  |       ^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===> error/type/map2/error-libsass
Error: argument `$map2` of `map-merge($map1, $map2)` must be a map
        on line 1:7 of input.scss, in function `map-merge`
        from line 1:7 of input.scss
>> a {b: map-merge((c: d), 1)}

   ------^

<===>
================================================================================
<===> error/too_few_args/input.scss
a {b: map-merge((c: d))}

<===> error/too_few_args/error
Error: Missing argument $map2.
  ,
1 | a {b: map-merge((c: d))}
  |       ^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===> error/too_few_args/error-libsass
Error: Function map-merge is missing argument $map2.
        on line 1 of input.scss
>> a {b: map-merge((c: d))}

   ------^

<===>
================================================================================
<===> error/too_many_args/input.scss
a {b: map-merge((c: d), (e: f), (g: h))}

<===> error/too_many_args/error
Error: Only 2 arguments allowed, but 3 were passed.
  ,
1 | a {b: map-merge((c: d), (e: f), (g: h))}
  |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  '
  input.scss 1:7  root stylesheet

<===> error/too_many_args/error-libsass
Error: wrong number of arguments (3 for 2) for `map-merge'
        on line 1:7 of input.scss
>> a {b: map-merge((c: d), (e: f), (g: h))}

   ------^
